# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES.
# SPDX-FileCopyrightText: All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

defaults:
  - /variables: drivaerml
  - _self_

etl:
  # Common settings used across components
  common:
    kind: drivaerml  # must be either drivesim, drivaerml or ahmedml
    model_type: surface  # produce data for which model? surface, volume, combined

  processing:
    num_processes: 12
    args: {}

  validator:
    _target_: examples.external_aerodynamics.domino.dataset_validator.DoMINODatasetValidator
    _convert_: all

    validation_level: "fields"  # One of "structure" or "fields"

  source:
    _target_: examples.external_aerodynamics.domino.data_sources.DoMINODataSource
    _convert_: all

    input_dir: ???  # Path to input dataset directory (required)
    kind: ${etl.common.kind}
    model_type: ${etl.common.model_type}

  transformations:

    # Preprocessing transformations.
    # These take in the raw geometry, volume and surface data, and apply DoMINO specific preprocessing transformations.
    # Variable names are piped in from the variables/drivaerml.yaml or variables/ahmedml.yaml file.
    preprocessing:
      _target_: examples.external_aerodynamics.domino.data_transformations.DoMINOPreprocessingTransformation
      _convert_: all
      decimation:
        algo: decimate_pro  # can be one of {decimate_pro, decimate}
        reduction: 0.0  # 0 means no decimation.
        preserve_topology: false

    # Default - Zarr transformation.
    # This takes in the processed data and metadata, and converts it into a Zarr/NumPy write ready format.
    # Users can choose between DoMINOZarrTransformation or DoMINONumpyTransformation.
    # NOTE: This should match the Sink class' serialization method.
    # If you choose the NumPy transformation, please comment out the Zarr transformation, and uncomment the below NumPy transformation.

    # TODO (@saikrishnanc): Use Hydra facilities to avoid having to edit the config in multiple places.
    zarr:
      _target_: examples.external_aerodynamics.domino.data_transformations.DoMINOZarrTransformation
      _convert_: all
      compression_method: "zstd"
      compression_level: 5
      chunk_size_mb: 1.0

    # numpy:
    #   _target_: examples.external_aerodynamics.domino.data_transformations.DoMINONumpyTransformation
    #   _convert_: all

  sink:
    _target_: examples.external_aerodynamics.domino.data_sources.DoMINODataSource
    _convert_: all

    output_dir: ???  # Path to output directory (required)
    kind: ${etl.common.kind}
    # "zarr" or "numpy". NOTE: This should match the Transformation class' output format.
    serialization_method: "zarr"
    overwrite_existing: true
